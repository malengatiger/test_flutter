// Mocks generated by Mockito 5.4.4 from annotations
// in busha_app/test/ui/landing/landing_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:busha_app/misc/dark_light_control.dart' as _i10;
import 'package:busha_app/models/mode_and_color.dart' as _i3;
import 'package:busha_app/models/user.dart' as _i9;
import 'package:busha_app/services/auth.dart' as _i11;
import 'package:busha_app/services/net.dart' as _i5;
import 'package:busha_app/util/prefs.dart' as _i6;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeModeAndColor_1 extends _i1.SmartFake implements _i3.ModeAndColor {
  _FakeModeAndColor_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_2 extends _i1.SmartFake implements _i4.FirebaseAuth {
  _FakeFirebaseAuth_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNet_3 extends _i1.SmartFake implements _i5.Net {
  _FakeNet_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrefs_4 extends _i1.SmartFake implements _i6.Prefs {
  _FakePrefs_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Prefs].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrefs extends _i1.Mock implements _i6.Prefs {
  MockPrefs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i2.SharedPreferences);

  @override
  _i8.Future<dynamic> saveUser(_i9.User? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  void saveModeAndColor(_i3.ModeAndColor? mode) => super.noSuchMethod(
        Invocation.method(
          #saveModeAndColor,
          [mode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ModeAndColor getModeAndColor() => (super.noSuchMethod(
        Invocation.method(
          #getModeAndColor,
          [],
        ),
        returnValue: _FakeModeAndColor_1(
          this,
          Invocation.method(
            #getModeAndColor,
            [],
          ),
        ),
      ) as _i3.ModeAndColor);

  @override
  void saveColorIndex(int? index) => super.noSuchMethod(
        Invocation.method(
          #saveColorIndex,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getColorIndex() => (super.noSuchMethod(
        Invocation.method(
          #getColorIndex,
          [],
        ),
        returnValue: 0,
      ) as int);
}

/// A class which mocks [ModeListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockModeListener extends _i1.Mock implements _i10.ModeListener {
  MockModeListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Stream<_i3.ModeAndColor> get darkLightStream => (super.noSuchMethod(
        Invocation.getter(#darkLightStream),
        returnValue: _i8.Stream<_i3.ModeAndColor>.empty(),
      ) as _i8.Stream<_i3.ModeAndColor>);

  @override
  dynamic setMode(_i3.ModeAndColor? mc) => super.noSuchMethod(Invocation.method(
        #setMode,
        [mc],
      ));
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i11.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_2(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i4.FirebaseAuth);

  @override
  _i5.Net get net => (super.noSuchMethod(
        Invocation.getter(#net),
        returnValue: _FakeNet_3(
          this,
          Invocation.getter(#net),
        ),
      ) as _i5.Net);

  @override
  _i6.Prefs get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakePrefs_4(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i6.Prefs);

  @override
  _i8.Future<_i9.User?> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i9.User?>.value(),
      ) as _i8.Future<_i9.User?>);

  @override
  _i8.Future<dynamic> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<bool> register(_i9.User? user) => (super.noSuchMethod(
        Invocation.method(
          #register,
          [user],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i7.Response> getUserByEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i8.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #getUserByEmail,
            [email],
          ),
        )),
      ) as _i8.Future<_i7.Response>);

  @override
  _i8.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}
